select * from t_member;
select * from t_board order by bno desc;
SELECT SEQ_BOARD.NEXTVAL FROM DUAL;
commit;

delete t_board where bno = 288;
delete t_board where category = 3;

ALTER TABLE t_board ADD ( CATEGORY NUMBER DEFAULT 1);


UPDATE t_member SET auth = 0 WHERE id = 'ina9377';


CREATE UNIQUE INDEX IDX_BOARD_BNO_CATEGORY ON t_board(BNO DESC, CATEGORY);

SELECT COUNT(*) FROM t_board WHERE CATEGORY = 1;

--페이징

SELECT * FROM 
(
SELECT 
    /*+ INDEX_DESC(T_BOARD PK_BOARD) */
    BNO, TITLE, HITCOUNT, 
    CASE
        WHEN SYSDATE - REGDATE > 1 THEN TO_CHAR(REGDATE, 'YY/MM/DD')
        ELSE TO_CHAR(REGDATE, 'HH24:MI:SS')
    END REGDATE,
    WRITER,
    ROWNUM RN,
    (SELECT COUNT(BNO) FROM T_BOARD) CNT
FROM T_BOARD
WHERE CATEGORY = 1
AND ROWNUM <= 10
)
WHERE RN > 0;

desc t_board;
SELECT * FROM t_board;

--페이지추가
INSERT INTO T_BOARD(BNO, TITLE, HITCOUNT, CONTENT, regdate, WRITER)
    SELECT SEQ_BOARD.NEXTVAL, TITLE, HITCOUNT, CONTENT, REGDATE, WRITER FROM T_BOARD;
    
SELECT COUNT(*) FROM T_BOARD;
SELECT * FROM T_BOARD;

INSERT INTO T_BOARD VALUES (SEQ_BOARD.nextval, '별빛 심포니', '별빛 심포니', 325, sysdate, 'admin', 2);

-- 파일첨부 기능 테이블 추가 T_ATTACH
CREATE TABLE T_ATTACH (
    UUID VARCHAR2(50) CONSTRAINT PK_ATTACH PRIMARY KEY,
    ORIGIN VARCHAR2(500),
    PATH CHAR(10),
    IMAGE CHAR(1) DEFAULT '0',
    ORD NUMBER DEFAULT 1,
    BNO CONSTRAINT FK_ATTACH_BNO REFERENCES T_BOARD(BNO)
);

DROP TABLE T_ATTACH;
SELECT * FROM t_attach;

DELETE t_attach WHERE BNO = 167;

-- 목록조회
SELECT * FROM T_ATTACH WHERE BNO = 1;

--상세조회
SELECT * FROM T_ATTACH WHERE IIOD = 1;

--UUID BNO 묶어서 인덱스 생성
CREATE UNIQUE INDEX IDX_ATTACH_UUID_BNO ON T_ATTACH (UUID, BNO DESC);

--힌트 사용해서 최적화 경로 직접지정
SELECT /*+ INDEX(T_ATTACH IDX_ATTACH_UUID_BNO) */ * FROM T_ATTACH WHERE BNO = 1;

SELECT * FROM T_ATTACH;

SELECT * FROM t_reply;
ALTER TABLE T_REPLY MODIFY (BNO CONSTRAINT FK_REPLY_BNO REFERENCES T_BOARD(BNO));
ALTER TABLE T_REPLY ADD CONSTRAINT FK_REPLY_WRITER FOREIGN KEY(wRITER) REFERENCES T_MEMBER(ID);

desc t_reply;
create sequence seq_reply;



